  <h3>
   Modifications to XHTML+RDFa
  </h3>
  <p>
   <em>This section is normative.</em>
  </p>
  <p>
   The [<a href="http://www.w3.org/TR/rdfa-syntax/">XHTML+RDFa</a>]
   Recommendation is the base document on which this section builds. That
   document specifies the attributes and processing rules for extracting
   RDF from an XHTML document. This section specifies changes to the
   attributes and processing rules defined in XHTML+RDFa in order to
   support extracting RDF from HTML documents.
  </p>

  <h4>Specifying the language for a literal</h4>
  <p>
   The <code>lang</code> attribute must be supported in the same manner 
   as the <code>xml:lang</code> attribute is in the XHTML+RDFa specification.
   The precedence rules for selecting which value overrides the other is
   outlined in the section titled "The lang and xml:lang attributes" in
   the HTML5 specification.
  </p>
  <p>
   If an author is unsure of the final encapsulating DOCTYPE for their
   markup, such as HTML5 vs. XHTML5, it is suggested that the author specify
   both <code>lang</code> and <code>xml:lang</code> where the value in
   both attributes is exactly the same.
  </p>

  <h4>Invalid XMLLiteral values</h4>
  <p>
   When generating literals of type XMLLiteral, the processor must ensure that
   the output XMLLiteral is 
   <a href="http://www.w3.org/TR/xml/#dt-wellformed">well-formed XML</a>. 
   If the input is not well-formed XML</a>, the processor must transform
   the input text in a way that generates well-formed XML.
   <div class="XXX">
    Since the HTML5 specification already has an algorithm for 
    serializing a DOM subtree into XHTML5, the RDFa Task Force is considering
    re-using that algorithm.
   </div>
  </p>
  <p>
   Transformation to well-formed XML is required because an application
   that consumes XMLLiteral data expects that data to be well-formed.
  </p>
  <p>
   The transformation requirement does not apply to input data that are
   text-only, such as literals that contain a <code>datatype</code> attribute
   with an empty value (<code>""</code>), or input data that that contain
   only text nodes.
  </p>

  <h4>The <code>xmlns:</code> attribute</h4>
  <p>
   <div class="XXX">
    There have been various objections to the usage of the <code>xmlns</code>: 
    attribute across all HTML family languages. It is currently unknown 
    whether or not the <code>xmlns</code>: attribute will be supported in 
    HTML5 as it is defined in the 
    [<a href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML</a>]
    specification. The RDFa Task Force is exploring alternatives 
    to xmlns: that may be used in non-XML languages.
   </div>
   <div class="XXX">
    While deprecation of the xmlns: attribute is attempted in HTML5, it
    must still be available to ensure backwards-compatability for existing
    XHTML code snippets on the web. Which raises the question, if HTML5 
    subsumes XHTML 1.0 documents, and it is going to be long-lived, and 
    xmlns: is required to ensure backwards with XHTML documents, then there
    is no choice but to support xmlns: as it is defined in 
    [<a href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML</a>].
   </div>
  </p>
  <p>
   CURIE prefix mappings specified using <code>xmlns:</code>
   must be processed using the rules specified in the
   [<a href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML</a>]
   Recommendation.
  </p>
  <p>
   Since CURIE prefix mappings have been specified using <code>xmlns:</code>, 
   and since HTML attribute names are case-insensitive, CURIE prefix names 
   declared using the <code>xmlns:</code>attribute-name pattern 
   <code>xmlns:&lt;PREFIX&gt;="&lt;URI&gt;"</code> should be specified
   using only lower-case characters. For example, the text "xmlns:" and the
   text in "&lt;PREFIX&gt;" should be lower-case only. This is to ensure that 
   prefix mappings are interpreted in the same way between HTML 
   (case-insensitive attribute names) and XHTML (case-sensitive attribute
   names) document types.
  </p>

<!-- experimental new RDFa features
  <h4>The <code>token</code> attribute</h4>
  <p>
   <div class="XXX">
    Warning: All statements regarding the <code>token</code> attribute 
    do not enjoy consensus in the RDFa Task Force and could be removed at
    any point without notice.
   </div>
   If authors would like to ensure that their prefix mappings are supported 
   across all XHTML and HTML documents, they should use the <code>token</code> 
   attribute to specify CURIE prefix mappings.
  </p>
  <p>
   The syntax for the <code>token</code> attribute value is as follows:
   <pre>
    prefix_mappings := 1*(token_mapping *whitespace)
    token_mapping   := token *whitespace '=' *whitespace mapping
    token           := NCName        ; as defined in [<a href="http://www.w3.org/TR/REC-xml-names/#NT-NCName">Namespaces in XML</a>]
    mapping         := irelative-ref ; as defined in [<a href="http://www.ietf.org/rfc/rfc3987">IRI</a>]
    whitespace      := White_Space   ; as defined in the HTML5 Specification under '"White_Space" characters'
   </pre>
   For example, the following markup:
   <pre>
    &lt;body token="ex=http://example.org/"&gt;
   </pre>
   when applied to the following HTML snippet:
   <pre>
    &lt;a rel="ex:bar"&gt;
   </pre>
   would expand the CURIE value in <code>rel</code> as 
   <code>http://example.org/bar</code>. Similarly, for the following markup:
   <pre>
    &lt;body token="author=http://example.org/author publisher=http://example.org/publisher"&gt;
   </pre>
   when applied to the following HTML snippet:
   <pre>
    &lt;a rel="author"&gt;
   </pre>
   would expand the CURIE value in <code>rel</code> as <code>http://example.org/author</code>.
  </p>
  <h4>Use of URIs in CURIE-only attribute values</h4>
  <p>
   <div class="XXX">
    Warning: All statements regarding the use of URIs in attribute value's
    intended to receive reserved_words, CURIEs or Safe CURIEs, per the 
    XHTML+RDFa specification do not enjoy consensus in the RDFa Task Force 
    and could be removed at any point without notice.
   </div>
  <p>
  <p>
   Document authors should not create CURIE token mappings for well-known
   URI schemes such as http, ftp, urn and a number of other well-known schemes 
   specified in 
   [<a href="http://www.iana.org/assignments/uri-schemes.html">The IANA URI Schemes Registry</a>], 
   as well as other URI schemes that are 
   commonly used on the Internet. If common URI schemes are used as CURIE
   tokens, then they may affect triple generation via modifications to the 
   CURIE processing algorithm (described below). The use of common URI schemes
   as CURIE tokens may result in unexpected substitutions in certain
   markup scenarios.
  </p>
  <p>
   CURIE processing must follow the processing definition specified in 
   the XHTML+RDFa Recommendation with the following modification:
  </p>
  <p>
   If a token mapping is not found for text that is given to the CURIE 
   processing algorithm, and the text is an Internationalized Resource 
   Identifier as defined in 
   [<a href="http://www.ietf.org/rfc/rfc3987">IRI</a>], and the scheme is
   one of the allowable scheme values in the section below, then the expanded 
   value of the potential CURIE should be the IRI. 
  </p>
  <h5>Allowable CURIE Scheme values</h5>
  <p>
   <em>This section is informative.</em>
  </p>
  <p>
   Each of these listed values is a 
   [<a href="http://www.iana.org/assignments/uri-schemes.html">registered IANA Scheme</a>] 
   with a corresponding RFC:
  </p>
  <p>
aaa
aaas
acap
cap
cid
crid
data
dav
dict
dns
fax
file
ftp
go
gopher
h323
http
https
iax
icap
im
imap
info
ipp
iris
iris.beep
iris.xpc
iris.xpcs
iris.lwz
ldap
mailto
mid
modem
msrp
msrps
mtqp
mupdate
news
nfs
nntp
opaquelocktoken
pop
pres
rtsp
service
shttp
sieve
sip
sips
snmp
soap.beep
soap.beeps
tag
tel
telnet
tftp
thismessage
tip
tv
urn
vemmi
xmlrpc.beep
xmlrpc.beeps
xmpp
z39.50r
z39.50s
  </p>

end experimental RDFa features -->

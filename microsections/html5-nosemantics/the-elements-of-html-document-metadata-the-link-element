  <h4>The <dfn><code>link</code></dfn> element</h4>

  <dl class="element">
   <dt>Categories</dt>
   <dd><span>Metadata content</span>.</dd>
   <dt>Contexts in which this element may be used:</dt>
   <dd>Where <span>metadata content</span> is expected.</dd>
   <dd>In a <code>noscript</code> element that is a child of a <code>head</code> element.</dd>
   <dt>Content model:</dt>
   <dd>Empty.</dd>
   <dt>Content attributes:</dt>
   <dd><span>Global attributes</span></dd>
   <dd><code title="attr-link-href">href</code></dd>
   <dd><code title="attr-link-rel">rel</code></dd>
   <dd><code title="attr-link-media">media</code></dd>
   <dd><code title="attr-link-hreflang">hreflang</code></dd>
   <dd><code title="attr-link-type">type</code></dd>
   <dd><code title="attr-link-sizes">sizes</code></dd>
   <dd>Also, the <code title="attr-link-title">title</code> attribute has special semantics on this element.</dd>
   <dt>DOM interface:</dt>
   <dd>
<pre class="idl">interface <dfn>HTMLLinkElement</dfn> : <span>HTMLElement</span> {
           attribute boolean <span title="dom-link-disabled">disabled</span>;
           attribute DOMString <span title="dom-link-href">href</span>;
           attribute DOMString <span title="dom-link-rel">rel</span>;
  readonly attribute DOMTokenList <span title="dom-link-relList">relList</span>;
           attribute DOMString <span title="dom-link-media">media</span>;
           attribute DOMString <span title="dom-link-hreflang">hreflang</span>;
           attribute DOMString <span title="dom-link-type">type</span>;
           attribute DOMString <span title="dom-link-sizes">sizes</span>;
};
<span>HTMLLinkElement</span> implements <span>LinkStyle</span>;</pre>
   </dd>
  </dl>

  <p>The <code>link</code> element allows authors to link their
  document to other resources.</p>

  <p>The destination of the link(s) is given by the <dfn
  title="attr-link-href"><code>href</code></dfn> attribute, which must
  be present and must contain a <span>valid URL</span>. If the <code
  title="attr-link-href">href</code> attribute is absent, then the
  element does not define a link.</p>

  <p>The types of link indicated (the relationships) are given by the
  value of the <dfn title="attr-link-rel"><code>rel</code></dfn>
  attribute, which must be present, and must have a value that is a
  <span>set of space-separated tokens</span>. The <a
  href="#linkTypes">allowed values and their meanings</a> are defined
  in a later section. If the <code title="attr-link-rel">rel</code>
  attribute is absent, or if the values used are not allowed according
  to the definitions in this specification, then the element does not
  define a link.</p>

  <p>Two categories of links can be created using the
  <code>link</code> element. <dfn title="external resource link">Links
  to external resources</dfn> are links to resources that are to be
  used to augment the current document, and <dfn title="hyperlink
  link">hyperlink links</dfn> are <span title="hyperlink">links to
  other documents</span>. The <a href="#linkTypes">link types
  section</a> defines whether a particular link type is an external
  resource or a hyperlink. One element can create multiple links (of
  which some might be external resource links and some might be
  hyperlinks); exactly which and how many links are created depends on
  the keywords given in the <code title="attr-link-rel">rel</code>
  attribute. User agents must process the links on a per-link basis,
  not a per-element basis.</p>

  <p class="note">Each link is handled separately. For instance, if
  there are two <code>link</code> elements with <code
  title="">rel="stylesheet"</code>, they each count as a separate
  external resource, and each is affected by its own attributes
  independently.</p>

  <p>The exact behavior for links to external resources depends on the
  exact relationship, as defined for the relevant link type. Some of
  the attributes control whether or not the external resource is to be
  applied (as defined below). <span class="impl">For external
  resources that are represented in the DOM (for example, style
  sheets), the DOM representation must be made available even if the
  resource is not applied. To obtain the resource, the user agent must
  <span title="resolve a url">resolve</span> the <span>URL</span>
  given by the <code title="attr-link-href">href</code> attribute,
  relative to the element, and then <span>fetch</span> the resulting
  <span>absolute URL</span>. User agents may opt to only
  <span>fetch</span> such resources when they are needed, instead of
  pro-actively <span title="fetch">fetching</span> all the external
  resources that are not applied.</span></p>

  <div class="impl">

  <p>The semantics of the protocol used (e.g. HTTP) must be followed
  when fetching external resources. (For example, redirects must be
  followed and 404 responses must cause the external resource to not
  be applied.)</p>

  <!-- similar text in various places -->
  <p>Fetching external resources must <span>delay the load
  event</span> of the element's document until the <span
  title="concept-task">task</span> that is <span title="queue a
  task">queued</span> by the <span>networking task source</span> once
  the resource has been <span title="fetch">fetched</span> (defined
  below) has been run.</p>

  <!-- the next paragraph is similar to text in the <style> section -->
  <p>The <span title="concept-task">task</span> that is <span
  title="queue a task">queued</span> by the <span>networking task
  source</span> once the resource has been <span
  title="fetch">fetched</span> must, if the loads were successful,
  <span>queue a task</span> to <span>fire a simple event</span> called
  <code title="event-load">load</code> at the <code>link</code>
  element; otherwise, if the resource or one of its subresources
  failed to completely load for any reason (e.g. DNS error, HTTP 404
  response, a connection being prematurely closed, unsupported
  Content-Type), it must instead <span>queue a task</span> to
  <span>fire a simple event</span> called <code
  title="event-error">error</code> at the <code>link</code>
  element. Non-network errors in processing the resource or its
  subresources (e.g. CSS parse errors, PNG decoding errors) are not
  failures for the purposes of this paragraph.</p>

  <p>The <span>task source</span> for these tasks is the <span>DOM
  manipulation task source</span>.</p>

  <hr>

  <p>Interactive user agents should provide users with a means to
  <span title="following hyperlinks">follow the hyperlinks</span>
  created using the <code>link</code> element, somewhere within their
  user interface. The exact interface is not defined by this
  specification, but it should include the following information
  (obtained from the element's attributes, again as defined below), in
  some form or another (possibly simplified), for each hyperlink
  created with each <code>link</code> element in the document:</p>

  <ul> <!-- the order here is the order that makes most sense for a UI -->

   <li>The relationship between this document and the resource (given
   by the <code title="attr-link-rel">rel</code> attribute)</li>

   <li>The title of the resource (given by the <code
   title="attr-link-title">title</code> attribute).</li>

   <li>The address of the resource (given by the <code
   title="attr-link-href">href</code> attribute).</li>

   <li>The language of the resource (given by the <code
   title="attr-link-hreflang">hreflang</code> attribute).</li>

   <li>The optimum media for the resource (given by the <code
   title="attr-link-media">media</code> attribute).</li>

  </ul>

  <p>User agents may also include other information, such as the type
  of the resource (as given by the <code
  title="attr-link-type">type</code> attribute).</p>

  </div>

  <p class="note">Hyperlinks created with the <code>link</code>
  element and its <code title="attr-link-rel">rel</code> attribute
  apply to the whole page. This contrasts with the <code
  title="attr-hyperlink-rel">rel</code> attribute of <code>a</code>
  and <code>area</code> elements, which indicates the type of a link
  whose context is given by the link's location within the
  document.</p>

  <p>The <dfn title="attr-link-media"><code>media</code></dfn>
  attribute says which media the resource applies to. The value must
  be a valid <a href="#mq">media query</a>. <a
  href="#refsMQ">[MQ]</a></p>

  <div class="impl">

  <p>If the link is a <span title="hyperlink link">hyperlink</span>
  then the <code title="attr-link-media">media</code> attribute is
  purely advisory, and describes for which media the document in
  question was designed.</p>

  <p>However, if the link is an <span>external resource link</span>,
  then the <code title="attr-link-media">media</code> attribute is
  prescriptive. The user agent must apply the external resource to
  <span title="view">views</span> while their state match the listed
  media and the other relevant conditions apply, and must not apply
  them otherwise.</p><!-- note similar text in <style> section -->

  <p class="note">The external resource might have further
  restrictions defined within that limit its applicability. For
  example, a CSS style sheet might have some <code
  title="">@media</code> blocks. This specification does not override
  such further restrictions or requirements.</p><!-- note similar text
  in <style> section -->

  </div>

  <p id="default-media">The default, if the <code
  title="attr-link-media">media</code> attribute is omitted, is
  <code>all</code>, meaning that by default links apply to all
  media.</p>

  <p>The <dfn title="attr-link-hreflang"><code>hreflang</code></dfn>
  attribute on the <code>link</code> element has the same semantics as
  the <span title="attr-hyperlink-hreflang"><code>hreflang</code>
  attribute on hyperlink elements</span>.</p>

  <p>The <dfn title="attr-link-type"><code>type</code></dfn> attribute
  gives the <span>MIME type</span> of the linked resource. It is purely advisory.
  The value must be a <span>valid MIME type</span>, optionally with
  parameters.</p>

  <p>For <span title="external resource link">external resource
  links</span>, the <code title="attr-link-type">type</code> attribute
  is used as a hint to user agents so that they can avoid fetching
  resources they do not support. <span class="impl">If the attribute
  is present, then the user agent must assume that the resource is of
  the given type. If the attribute is omitted, but the external
  resource link type has a default type defined, then the user agent
  must assume that the resource is of that type. If the UA does not
  support the given <span>MIME type</span> for the given link relationship, then
  the UA should not fetch the resource; if the UA does support the
  given <span>MIME type</span> for the given link relationship, then the UA should
  <span>fetch</span> the resource. If the attribute is omitted, and
  the external resource link type does not have a default type
  defined, but the user agent would fetch the resource if the type was
  known and supported, then the user agent should <span>fetch</span>
  the resource under the assumption that it will be
  supported.</span></p>

  <div class="impl">

  <p>User agents must not consider the <code
  title="attr-link-type">type</code> attribute authoritative &mdash;
  upon fetching the resource, user agents must not use the <code
  title="attr-link-type">type</code> attribute to determine its actual
  type. Only the actual type (as defined in the next paragraph) is
  used to determine whether to <em>apply</em> the resource, not the
  aforementioned assumed type.</p>

  <p id="concept-link-type-sniffing">If the external resource link
  type defines rules for processing the resource's <span
  title="Content-Type">Content-Type metadata</span>, then those rules
  apply. Otherwise, if the resource is expected to be an image, user
  agents may apply the <span title="Content-Type sniffing:
  image">image sniffing rules</span>, with the <var title="">official
  type</var> being the type determined from the resource's <span
  title="Content-Type">Content-Type metadata</span>, and use the
  resulting sniffed type of the resource as if it was the actual
  type. Otherwise, if neither of these conditions apply or if the user
  agent opts not to apply the image sniffing rules, then the user
  agent must use the resource's <span
  title="Content-Type">Content-Type metadata</span> to determine the
  type of the resource. If there is no type metadata, but the external
  resource link type has a default type defined, then the user agent
  must assume that the resource is of that type.</p>

  <p class="note">The <code
  title="link-type-stylesheet">stylesheet</code> link type defines
  rules for processing the resource's <span
  title="Content-Type">Content-Type metadata</span>.</p>

  <p>Once the user agent has established the type of the resource, the
  user agent must apply the resource if it is of a supported type and
  the other relevant conditions apply, and must ignore the resource
  otherwise.</p>

  <div class="example">

   <p>If a document contains style sheet links labeled as follows:</p>

   <pre>&lt;link rel="stylesheet" href="A" type="text/plain"&gt;
&lt;link rel="stylesheet" href="B" type="text/css"&gt;
&lt;link rel="stylesheet" href="C"&gt;</pre>

   <p>...then a compliant UA that supported only CSS style sheets
   would fetch the B and C files, and skip the A file (since
   <code>text/plain</code> is not the <span>MIME type</span> for CSS style
   sheets).</p>

   <p>For files B and C, it would then check the actual types returned
   by the server. For those that are sent as <code>text/css</code>, it
   would apply the styles, but for those labeled as
   <code>text/plain</code>, or any other type, it would not.</p>

   <p>If one the two files was returned without a
   <span>Content-Type</span> metadata, or with a syntactically
   incorrect type like <code
   title="">Content-Type:&nbsp;"null"</code>, then the default type
   for <code title="rel-stylesheet">stylesheet</code> links would kick
   in. Since that default type is <code title="">text/css</code>, the
   style sheet <em>would</em> nonetheless be applied.</p>

  </div>

  </div>

  <p>The <dfn title="attr-link-title"><code>title</code></dfn>
  attribute gives the title of the link. With one exception, it is
  purely advisory. The value is text. The exception is for style sheet
  links, where the <code title="attr-link-title">title</code>
  attribute defines <span>alternative style sheet sets</span>.</p>

  <p class="note">The <code title="attr-link-title">title</code>
  attribute on <code>link</code> elements differs from the global
  <code title="attr-title">title</code> attribute of most other
  elements in that a link without a title does not inherit the title
  of the parent element: it merely has no title.</p>

  <p>The <code title="attr-link-sizes">sizes</code> attribute is used
  with the <code title="rel-icon">icon</code> link type. The attribute
  must not be specified on <code>link</code> elements that do not have
  a <code title="attr-link-rel">rel</code> attribute that specifies
  the <code title="rel-icon">icon</code> keyword.</p>

  <div class="impl">

  <p>Some versions of HTTP defined a <code title="">Link:</code>
  header, to be processed like a series of <code>link</code> elements.
  If supported, for the purposes of ordering links defined by HTTP
  headers must be assumed to come before any links in the document, in
  the order that they were given in the HTTP entity header. (URIs in
  these headers are to be processed and resolved according to the
  rules given in HTTP; the rules of <em>this</em> specification don't
  apply.) <a href="#refsHTTP">[HTTP]</a> <a
  href="#refsWEBLINK">[WEBLINK]</a></p> <!-- WEBLINK is ref for Link: header -->

  <p>The DOM attributes <dfn
  title="dom-link-href"><code>href</code></dfn>, <dfn
  title="dom-link-rel"><code>rel</code></dfn>, <dfn
  title="dom-link-media"><code>media</code></dfn>, <dfn
  title="dom-link-hreflang"><code>hreflang</code></dfn>, and <dfn
  title="dom-link-type"><code>type</code></dfn>, and <dfn
  title="dom-link-sizes"><code>sizes</code></dfn> each must
  <span>reflect</span> the respective content attributes of the same
  name.</p>

  <p>The DOM attribute <dfn
  title="dom-link-rellist"><code>relList</code></dfn> <span
  class="impl">must</span> <span title="reflect">reflect</span> the <code
  title="attr-link-rel">rel</code> content attribute.</p>

  </div>

  <p>The DOM attribute <dfn
  title="dom-link-disabled"><code>disabled</code></dfn> only applies
  to style sheet links. When the <code>link</code> element defines a
  style sheet link, then the <code
  title="dom-link-disabled">disabled</code> attribute behaves as
  defined <span title="dom-linkstyle-disabled">for the alternative
  style sheets DOM</span>. For all other <code>link</code> elements it
  always return false and does nothing on setting.</p> <!-- that is
  normatively required in the definition of dom-linkstyle-disabled -->

  <p>The <code>LinkStyle</code> interface is also be implemented by
  this element; the <span>styling processing model</span> defines
  how. <a href="#refsCSSOM">[CSSOM]</a></p>




